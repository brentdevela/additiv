import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { fetchEmployee } from './employeeExplorerAPI';

const initialState = {
    status: 'idle',
    name: '',
    details: {
        position: '',
        directSubordinates: [],
    },
    employees: {},
};

export const fetchEmployeeAsync = createAsyncThunk(
    'employeeExplorer/fetchEmployee',
    async (name) => {
        const response = await fetchEmployee(name);
        // The value we return becomes the `fulfilled` action payload
        return response;
    }
);

export const employeeExplorerSlice = createSlice({
    name: 'employeeExplorer',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        setName: (state, action) => {
            state.name = action.payload;
        }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
        builder
            .addCase(fetchEmployeeAsync.pending, (state) => {
                state.status = 'loading';
            })
            .addCase(fetchEmployeeAsync.fulfilled, (state, action) => {
                state.status = 'idle';
                const [ position, directSubordinates = { 'direct-subordinates': [] } ] = action.payload;
                state.employees = {

                };
                state.details = {
                    position: position,
                    directSubordinates: directSubordinates['direct-subordinates']
                };
                // state.employees = [...action.payload];
            })
            .addCase(fetchEmployeeAsync.rejected, (state, action) => {
                state.status = 'invalid';
                state.details = {};
            });
    },
});

export const { setName } = employeeExplorerSlice.actions;

export const selectStatus = (state) => state.employeeExplorer.status;
export const selectName = (state) => state.employeeExplorer.name;
export const selectDetails = (state) => state.employeeExplorer.details;

export default employeeExplorerSlice.reducer;